syntax = "proto3";

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "metrics";

option optimize_for = SPEED;
option (gogoproto.marshaler_all)        = true;
option (gogoproto.sizer_all)            = true;
option (gogoproto.unmarshaler_all)      = true;
option (gogoproto.goproto_stringer_all) = true;
option (gogoproto.gostring_all)         = false;
option (gogoproto.stringer_all)         = false;
option (gogoproto.equal_all)            = false;
option (gogoproto.verbose_equal_all)    = false;
option (gogoproto.populate_all)         = false;
option (gogoproto.testgen_all)          = false;
option (gogoproto.benchgen_all)         = false;
option (gogoproto.goproto_getters_all)  = false;

// MetricType describes the type of metric.
enum MetricType{
    // UNSET expresses that the metric's type wasn't explicitly set.
    UNTYPED     = 0;
    COUNTER     = 1;
    COUNTERRATE = 2;
    GAUGE       = 3;
    HISTOGRAM   = 4;
}

// Unit describes how the metric's units should be displayed.
enum Unit {
    // UNSET expresses that the metric's DisplayUnit wasn't explicitly set.
    UNSET       = 0;
    // BYTES expresses that the metric's measurement is in bytes.
    BYTES       = 1;
    // CONST expresses that the metric's measurement is a constant value.
    CONST       = 2;
    // COUNT expresses that the metric's measurement is a count.
    COUNT       = 3;
    // NANOSECONDS expresses that the metric's measurement is in nanoseconds.
    NANOSECONDS = 4;
    // PERCENT expresses that the metric's measurement is a percentage value.
    PERCENT     = 5;
    // SECONDS expresses that the metric's measurement is in seconds.
    SECONDS     = 6;
}

message LabelPair {
    string name  = 1 ;
    string value = 2 ;
}

// Metadata holds metadata about a metric.
message Metadata {
    string name               = 1 ;
    string help               = 2 ;
    Unit unit                 = 3 ;
    repeated LabelPair labels = 4 [(gogoproto.nullable) = false];
}

// MetricFamily contains a list of metrics with the same name (a metric with multiple labels).
message MetricFamily {
    string name                 = 1;
    string help                 = 2;
    MetricType type             = 3;
    repeated MetricData metrics = 4 [(gogoproto.nullable) = false];
}

// MetricData holds exported data of metrics
message MetricData {
    CounterData counter           = 1;
    CounterRateData counter_rate  = 2;
    GaugeData  gauge              = 3;
    HistogramData histogram       = 4;
    repeated LabelPair labels     = 5 [(gogoproto.nullable) = false];
    Unit unit                     = 6;
    int64 TimestampNs             = 7;
}

message CounterData {
    double value = 1;
}

message CounterRateData {
    double total_value  = 1;
    double window_value = 2;
    double avg_value    = 3;
}

message GaugeData {
    double value = 1;
}

message HistogramData {
    uint64 sample_count     = 1;
    double sample_sum       = 2;
    repeated Bucket buckets = 3 [(gogoproto.nullable) = false];
    repeated Percentile pts = 4 [(gogoproto.nullable) = false];
}

message Bucket {
    uint64 cumulative_count  = 1;
    double upper_bound       = 2;
}

message Percentile {
    string  name   = 1;
    double  unit   = 2;
    double  value  = 3;
}